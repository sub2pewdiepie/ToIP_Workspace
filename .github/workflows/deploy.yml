name: Deploy to VPS

on: push
  # branches:
  #   - dev

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Execute SSH commands
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Set up SSH for GitHub access
            mkdir -p ~/.ssh
            echo "${{ secrets.REPO_SSH_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan github.com >> ~/.ssh/known_hosts

            # Clone the private repository using SSH
            cd sussy_project
            rm -rf ToIP_Workspace
            git clone -b main git@github.com:${{ github.repository }}.git ToIP_Workspace
            
            # Prepare files

            cd ToIP_Workspace
            cat > config/config.json <<EOL
            {

            "user": "${{ secrets.POSTGRES_USER }}",
            "password": "${{ secrets.POSTGRES_PASSWORD }}",
            "dbname": "${{ secrets.DBNAME }}",
            "host": "${{ secrets.HOST }}",
            "port": "${{secrets.PORT}}"


             }
            EOL
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
            echo "POSTGRES_DB=${{ secrets.DBNAME }}" >> .env
            echo "LOG_FORMAT=${{ secrets.LOG_FORMAT }}" >> .env
            echo "LOG_LEVEL=${{ secrets.LOG_LEVEL }}" >> .env
            echo "EMAIL=${{ secrets.EMAIL }}" >> .env
            # Build and deploy
            docker compose build --no-cache
            chmod +x ./gen_env.sh
            ./gen_env.sh
            docker compose up -d
